[{"E:\\work\\workspace\\20201228_ReactAdmin\\src\\index.js":"1","E:\\work\\workspace\\20201228_ReactAdmin\\src\\reportWebVitals.js":"2","E:\\work\\workspace\\20201228_ReactAdmin\\src\\App.js":"3","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Head\\index.js":"4","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Head\\Head.js":"5","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Side\\index.js":"6","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Side\\Side.js":"7","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\index.js":"8","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\DictionaryPage.js":"9","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\components\\Dialog\\index.js":"10","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\components\\Dialog\\Dialog.js":"11"},{"size":474,"mtime":1609898754876,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1609740271180,"results":"14","hashOfConfig":"13"},{"size":718,"mtime":1609899138644,"results":"15","hashOfConfig":"13"},{"size":50,"mtime":1609896877183,"results":"16","hashOfConfig":"13"},{"size":712,"mtime":1609897799220,"results":"17","hashOfConfig":"13"},{"size":50,"mtime":1609897242672,"results":"18","hashOfConfig":"13"},{"size":2216,"mtime":1609931728923,"results":"19","hashOfConfig":"13"},{"size":82,"mtime":1609894923145,"results":"20","hashOfConfig":"13"},{"size":4887,"mtime":1610017675987,"results":"21","hashOfConfig":"13"},{"size":58,"mtime":1609900568446,"results":"22","hashOfConfig":"13"},{"size":1063,"mtime":1609901311614,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ohlehs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"E:\\work\\workspace\\20201228_ReactAdmin\\src\\index.js",[],["50","51"],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\reportWebVitals.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\App.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Head\\index.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Head\\Head.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Side\\index.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\Side\\Side.js",["52","53","54"],"import './Side.css';\r\nimport React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Side extends React.Component {\r\n\r\n    state = {\r\n      data: [\r\n        {\r\n          \"key\": '1',\r\n          \"title\": \"测试\",\r\n          \"children\": [\r\n            {\r\n              \"key\": '4',\r\n              \"title\": \"测试4\",\r\n              \"children\": [\r\n                {\r\n                  \"key\": '7',\r\n                  \"title\": \"测试7\"\r\n                },\r\n                {\r\n                  \"key\": '8',\r\n                  \"title\": \"测试8\"\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"key\": '2',\r\n          \"title\": \"测试2\",\r\n          \"children\": [\r\n            {\r\n              \"key\": '5',\r\n              \"title\": \"测试5\",\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"key\": '3',\r\n          \"title\": \"测试3\",\r\n          \"children\": [\r\n            {\r\n              \"key\": '6',\r\n              \"title\": \"测试6\",\r\n              \"children\": [\r\n                {\r\n                  \"key\": '9',\r\n                  \"title\": \"测试9\",\r\n                },\r\n                {\r\n                  \"key\": '10',\r\n                  \"title\": \"测试10\",\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  \r\n    recursion(dataSource) {\r\n      return (\r\n        dataSource.map((menu, index) => {\r\n          if (menu.children) {\r\n            return (\r\n              <SubMenu key={menu.key} title={menu.title}>\r\n                {this.recursion(menu.children)}\r\n              </SubMenu>\r\n            )\r\n          } else {\r\n            return (<Menu.Item key={menu.key}>{menu.title}</Menu.Item>)\r\n          }\r\n        })\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Sider width={200} className=\"site-layout-background\">\r\n          <Menu\r\n            mode=\"inline\"\r\n            style={{ width: 200 }}\r\n          >\r\n            { this.recursion(this.state.data) }\r\n          </Menu>\r\n        </Sider>\r\n      );\r\n    }\r\n  }\r\nexport default Side;","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\index.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\DictionaryPage.js",["55","56","57","58","59","60"],"import './DictionaryPage.css';\r\nimport React from 'react';\r\n\r\nimport { \r\n    Table, \r\n    Badge, \r\n    Menu, \r\n    Dropdown, \r\n    Space, \r\n    Breadcrumb, \r\n    Button\r\n} from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nimport data from './data.json';\r\nimport Dialog from './components/Dialog'\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>Action 1</Menu.Item>\r\n    <Menu.Item>Action 2</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction ExpandedRowRender(props) {\r\n    const values = props.values\r\n    const columns = [\r\n      { title: 'Name', dataIndex: 'name', key: 'name' },\r\n      { title: 'Age', dataIndex: 'age', key: 'age' },\r\n      { title: 'Address', dataIndex: 'address', key: 'address' },\r\n      {\r\n        title: 'Status',\r\n        key: 'state',\r\n        render: () => (\r\n          <span>\r\n            <Badge status=\"success\" />\r\n            Finished\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        render: () => (\r\n          <Space size=\"middle\">\r\n            <a>Pause</a>\r\n            <a>Stop</a>\r\n            <Dropdown overlay={menu}>\r\n              <a>\r\n                More <DownOutlined />\r\n              </a>\r\n            </Dropdown>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    // const datas = [];\r\n    // for (let i = 0; i < 120; ++i) {\r\n    //   datas.push({\r\n    //     key: i,\r\n    //     date: '2014-12-24 23:12:00',\r\n    //     name: 'This is production name',\r\n    //     upgradeNum: 'Upgraded: 56',\r\n    //   });\r\n    // }\r\n\r\n    function showTotal(total) {\r\n      return `共 ${total} 条`;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table\r\n          columns={columns} \r\n          dataSource={values} \r\n          pagination={{ \r\n            position: ['none', 'bottomRight'], \r\n            defaultCurrent: 1,\r\n            defaultPageSize: 10,\r\n            // current: 4,\r\n            // pageSize: 10,\r\n            showTotal: showTotal\r\n          }} \r\n        /> \r\n      </div>\r\n    )\r\n  };\r\n\r\nclass DictionaryPage extends React.Component {\r\n  \r\n  state = {\r\n    columns: [\r\n      { title: 'Name', dataIndex: 'name', key: 'name' },\r\n      { title: 'Platform', dataIndex: 'platform', key: 'platform' },\r\n      { title: 'Version', dataIndex: 'version', key: 'version' },\r\n      { title: 'Upgraded', dataIndex: 'upgradeNum', key: 'upgradeNum' },\r\n      { title: 'Creator', dataIndex: 'creator', key: 'creator' },\r\n      { title: 'Date', dataIndex: 'createdAt', key: 'createdAt' },\r\n      { title: 'Action', key: 'operation', render: () => <a>Publish</a> },\r\n    ],\r\n    data: data,\r\n    display: false,\r\n    values: [],\r\n    visible: false\r\n  }\r\n\r\n  // 点击当前行,获取当前行所有信息\r\n  tableDisplay = (data) => {\r\n    console.log('当前点击行的数据：', data)\r\n    console.log(data.key)\r\n    if(data.values && data.values.length > 0) {\r\n      this.state.values = data.values\r\n      this.setState({ display: true })\r\n    }else{\r\n      this.setState({ display: false })\r\n    }\r\n    // console.log(this.state.display)\r\n  }\r\n  \r\n  // 双击行，关闭一级菜单下的二级菜单表格\r\n  doubleClickClose = () => {\r\n    this.setState({ display: false })\r\n  }\r\n\r\n  addMenu = () => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"clearfix\">\r\n          <Breadcrumb className=\"fl\" style={{ marginBottom: '16px' }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div className=\"fr\" style={{ marginBottom: '16px' }}>\r\n            <Dialog />\r\n          </div>\r\n        </div>\r\n        <Table\r\n          onRow={record => {\r\n            return {\r\n              onClick: this.tableDisplay.bind(this, record), // 点击行,获取当前行所有信息\r\n              onDoubleClick: this.doubleClickClose,  // 双击行，关闭二级菜单\r\n              // onContextMenu: event => {},\r\n              // onMouseEnter: event => {}, // 鼠标移入行\r\n              // onMouseLeave: event => {},\r\n            };\r\n          }}\r\n          className=\"components-table-demo-nested\"\r\n          showHeader=\"false\"\r\n          columns={this.state.columns}\r\n          // expandable={{ expandedRowRender }}\r\n          selections={false}\r\n          dataSource={this.state.data}\r\n          pagination={{ \r\n            position: ['none', 'bottomRight'], \r\n            defaultCurrent: 1,\r\n            defaultPageSize: 10,\r\n            // current: 3, \r\n            // pageSize: 5,\r\n            showTotal: total => `共 ${total} 条`\r\n          }}\r\n        />\r\n        <div style={{display: this.state.display ? 'block' : 'none'}}>\r\n          <ExpandedRowRender values={this.state.values} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DictionaryPage;","E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\components\\Dialog\\index.js",[],"E:\\work\\workspace\\20201228_ReactAdmin\\src\\pages\\DictionaryPage\\components\\Dialog\\Dialog.js",[],["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":22},{"ruleId":"67","severity":1,"message":"71","line":4,"column":24,"nodeType":"69","messageId":"70","endLine":4,"endColumn":38},{"ruleId":"67","severity":1,"message":"72","line":4,"column":40,"nodeType":"69","messageId":"70","endLine":4,"endColumn":60},{"ruleId":"67","severity":1,"message":"73","line":11,"column":5,"nodeType":"69","messageId":"70","endLine":11,"endColumn":11},{"ruleId":"74","severity":1,"message":"75","line":47,"column":13,"nodeType":"76","endLine":47,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":48,"column":13,"nodeType":"76","endLine":48,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":50,"column":15,"nodeType":"76","endLine":50,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":101,"column":58,"nodeType":"76","endLine":101,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":114,"column":7,"nodeType":"79","endLine":114,"endColumn":17},{"ruleId":"63","replacedBy":"80"},{"ruleId":"65","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["82"],["83"],"no-global-assign","no-unsafe-negation"]